@model EWC.Models.Estimate

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-xs-12"><h3 class="text-center">Estimate</h3></div>
        <div class="col-xs-5">Company:
            @foreach(int s in new int[]{1,2}){
                <label>
                @Html.RadioButtonFor(model=>model.Company,s)
                    Company @s</label>
            }
        </div>
        <div class="col-xs-7">
            <h2> </h2>
            <div class="form-group">
            <label class="col-sm-3 control-label">Invoice No</label>
        
        <div class="col-sm-9">
            @if(Model!=null&&Model.DCNo!=null){
                @Html.Raw(Model.DCNo.Replace("EWJ/WB/","EWJ/INV/"))
            }
            @Html.HiddenFor(model => model.DCNo,new {@placeholder="AutoGenerated",@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.DCNo)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.Date, new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
            @Html.EditorFor(model => model.Date,new {@placeholder="DateTime",@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.ServiceTax,new {@class="col-sm-3 control-label" })
        
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ServiceTax,new {@placeholder="Service Tax No"})
                    @Html.ValidationMessageFor(model => model.ServiceTax)
                </div>
         </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TinNo,new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.TinNo,new {@placeholder="Tin No"})
                @Html.ValidationMessageFor(model => model.TinNo)
            </div>
        </div>

            <div class="form-group">
            @Html.LabelFor(model => model.IncomeTaxPan,new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.IncomeTaxPan,new {@placeholder="IT Pan No"})
                @Html.ValidationMessageFor(model => model.IncomeTaxPan)
            </div>
        </div>
      @*      <div class="form-group">
            @Html.LabelFor(model => model.QtyUnits, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.QtyUnits,new {@placeholder="'Kgs' or 'Tons' etc"})
            @Html.ValidationMessageFor(model => model.QtyUnits)
        </div>
</div>*@


        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 text-center"><hr /><h4>Customer Details</h4></div>
        <div class="col-xs-6">
            <div class="form-group">
            @Html.LabelFor(model => model.customer.NameofCompany, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.NameofCompany,new {@placeholder="Name of Company"})
            @Html.ValidationMessageFor(model => model.customer.NameofCompany)
        </div>
        </div>
                        <div class="form-group">
            @Html.LabelFor(model => model.customer.Address, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.TextAreaFor(model => model.customer.Address,new {@placeholder="Address",@rows="3"})
            @Html.ValidationMessageFor(model => model.customer.Address)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactPerson, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactPerson,new {@placeholder="Contact Person Name"})
            @Html.ValidationMessageFor(model => model.customer.ContactPerson)
        </div>

            </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo,new {@placeholder="Contact No"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo)
        </div>
            </div>


            </div>

        <div class="col-xs-6">
            <div class="form-group">
            @Html.LabelFor(model => model.customer.InwardDcNo, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.InwardDcNo,new {@placeholder="Inward DC No"})
            @Html.ValidationMessageFor(model => model.customer.InwardDcNo)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.Dated, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.Dated,new {@placeholder="Inward DC Dated",@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.customer.Dated)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.CustomerTin, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.CustomerTin,new {@placeholder="Customer Tin"})
            @Html.ValidationMessageFor(model => model.customer.Dated)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.CustomerWorkOrderNo, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.CustomerWorkOrderNo,new {@placeholder="Customer Tin"})
            @Html.ValidationMessageFor(model => model.customer.CustomerWorkOrderNo)
        </div>
        </div>
                        <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo2, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo2,new {@placeholder="Contact No"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo2)
        </div>
            </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo3, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo3,new {@placeholder="Contactno"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo3)
        </div>
        </div>
        </div>
        <hr />

    </div>
    <div class="row" id="itemsHolder">
        <div class="col-xs-12 text-center"><hr /><h4>Invoice Items</h4></div>
        
            <div class="row"><div class="col-xs-1">Sno.</div>
                <div class="col-xs-1">PartNo.</div>
            <div class="col-xs-2">Description</div>
            <div class="col-xs-1">Material</div>
            <div class="col-xs-1 QtyforItems">Qty</div>
                <div class="col-xs-1 NunitPrice">UnitPrice</div>
                <div class="col-xs-1 Namount">Amount</div>
                <div class="col-xs-1"><span class="glyphicon glyphicon-plus" id="AddItemsRow">AddItems</span></div>

            </div>
        @{var i = 0;}
        @do{
        <div class="itemsRow row">
            <div class="col-xs-1">1</div>
            <div class="col-xs-1 ">@Html.EditorFor(model => model.Items[i].Partno,new {@placeholder="Material"})</div>
            <div class="col-xs-2">@Html.EditorFor(model => model.Items[i].Desc,new {@placeholder="Description"})</div>
            <div class="col-xs-1">@Html.EditorFor(model => model.Items[i].Material,new {@placeholder="Material"})</div>
            <div class="col-xs-1 QtyforItems">@Html.TextBoxFor(model => model.Items[i].Quantity,new {@class="Qty"})</div>
            <div class="col-xs-1 ">@Html.TextBoxFor(model => model.Items[i].UnitPrice,new {@placeholder="Material",@class="UnitPrice"})</div>
           <div class="col-xs-1 ">@Html.TextBox("Amt", null, new { disabled="disabled",@readonly="readonly"})</div>
            @*<div class="col-xs-1 ">@Html.EditorFor(model => model.Items[i].scrapreturn,new {@placeholder="Material"})</div>*@

            </div>
            i++;
        } while (null!=Model&&i < Model.Items.Count());
            </div>
    <div class="row">
        <div class="col-xs-6">
            <div class="row">Payment Details</div>
            <div class="row">@Html.RadioButtonFor(model => model.paymode, "Cash", new {@checked="checked" })
                        @Html.Label("Cash")
              @foreach (var opt in new String[] {"Credit","AgainstDelivery" })
              {
                        @Html.RadioButtonFor(model => model.paymode, opt)
                        @Html.Label(opt)
              }
                </div>
            <div class="row">
                Full Paid:
                @Html.CheckBoxFor(model=>model.fullypaid)
                Amount Paid:@Html.TextBoxFor(model=>model.paidamount)

            </div>
        </div>
        <div class="col-xs-6 tomp">
            <div class="row"><div class="col-xs-3">SubTotal:</div><div class="col-xs-9"><span id="subtotalAmt"></span></div></div>
        </div>

    </div>
        
            <input type="submit" class="btn btn-success pull-right" value="Create" />
    }

<div>
    @Html.ActionLink("Back to Invoice  List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $('#AddItemsRow').click(function () {
            var myVariable = '<div class="itemsRow row">' +
            '<div class="col-xs-1">' + ($('.itemsRow').length + 1) + '</div>' +
            '<div class="col-xs-1 "><input class="text-box single-line" data-val="true" id="Items_' + $('.itemsRow').length + '__Partno" name="Items[' + $('.itemsRow').length + '].Partno" type="number"></div>' +
            '<div class="col-xs-2"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Desc" name="Items[' + $('.itemsRow').length + '].Desc" type="text" ></div>' +
            '<div class="col-xs-1"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Material" name="Items[' + $('.itemsRow').length + '].Material" type="text" ></div>' +
            '<div class="col-xs-1 QtyforItems"><input class="text-box single-line Qty" id="Items_' + $('.itemsRow').length + '__Quantity" name="Items[' + $('.itemsRow').length + '].Quantity" type="text" ></div>' +
            '<div class="col-xs-1 "><input class="text-box single-line UnitPrice" id="Items_' + $('.itemsRow').length + '__UnitPrice" name="Items[' + $('.itemsRow').length + '].UnitPrice" type="text" ></div>' +
            //'<div class="col-xs-1 "><input class="check-box" id="Items_0__scrapreturn" name="Items[' + $('.itemsRow').length + '].scrapreturn" type="checkbox" value="true"><input name="Items[' + $('.itemsRow').length + '].scrapreturn" type="hidden" value="false"></div>' +
            '<div class="col-xs-1 Amt"><input readonly disabled class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Amt" name="Amt" type="text" ></div>' +
            '</div>';
            $('#itemsHolder').append(myVariable);
        });
        $('[type="datetime"]').datetimepicker({ pickTime: true, "autoclose": true });

        $('#fullypaid').change(function () {
            if ($(this).is(':checked')) {
                $('#paidamount').attr('disabled', 'disabled').val('NA');
            } else {
                $('#paidamount').removeAttr('disabled').val('').focus();
            }
        });

        $(document).on('keyup', '.itemsRow input , .col-xs-6.tomp input ,#SheCess', function (e) {
            var amount = 0.0;

            $('.itemsRow').each(function (i, ele) {
                var amnt = parseFloat($(ele).find('.Qty').val() * ($(ele).find('.UnitPrice').val()));
                if (amnt != NaN && amnt != 0) {
                    amount += amnt;
                    $(ele).find('[name="Amt"]').val(amnt);
                }

            });
            var serv = 0.00;
            var edu = 0.00; var she = 0.00; var totaltax = 0.0;
            $('#subtotalAmt').html(''+amount+'');
            if (amount != NaN && amount != 0) {
                serv = parseFloat($('#ServiceTaxAmt').val());
                if (serv != NaN) {
                    $('#serviceTaxCalc').val((1.0*amount * serv) / 100.00);
                    totaltax += ((1.0 * amount * serv) / 100.00);
                }
            }
            if (amount != NaN && amount != 0) {
                edu = parseFloat($('#Educess').val());
                if (edu != NaN) {
                    $('#EduCessCalc').val((1.0 * amount * edu) / 100.00);
                    totaltax += ((1.0*amount * edu )/ 100.00);
                }
            }
            if (amount != NaN && amount != 0) {
                she = parseFloat($('#SheCess').val());
                if (she != NaN) {
                    $('#SheCessCalc').val(amount * she / 100.00);
                    totaltax += ((1.0*amount * she) / 100.00);
                }
            }
            $('#GrandTotal').html((amount + totaltax));

        });
    });

</script>
}

