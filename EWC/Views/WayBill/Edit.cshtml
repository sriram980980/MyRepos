@model EWC.Models.WayBill

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-xs-12"><h3 class="text-center">Way Bill</h3></div>
        <div class="col-xs-5">Company:
            @foreach(int s in new int[]{1,2}){
                <label>
                @Html.RadioButtonFor(model=>model.Company,s)
                    Company @s</label>
            }
        </div>
        <div class="col-xs-7">
            <h2> </h2>
            <div class="form-group">
            @Html.LabelFor(model => model.DCNo, new {@class="col-sm-3 control-label" })
        
        <div class="col-sm-9">
            @Html.EditorFor(model => model.DCNo,new {@placeholder="AutoGenerated",@disabled="disabled"})
            @Html.ValidationMessageFor(model => model.DCNo)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.Date, new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
            @Html.EditorFor(model => model.Date,new {@placeholder="DateTime",@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.ServiceTax,new {@class="col-sm-3 control-label" })
        
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ServiceTax,new {@placeholder="Service Tax No"})
                    @Html.ValidationMessageFor(model => model.ServiceTax)
                </div>
         </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TinNo,new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.TinNo,new {@placeholder="Tin No"})
                @Html.ValidationMessageFor(model => model.TinNo)
            </div>
        </div>

            <div class="form-group">
            @Html.LabelFor(model => model.IncomeTaxPan,new {@class="col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.IncomeTaxPan,new {@placeholder="IT Pan No"})
                @Html.ValidationMessageFor(model => model.IncomeTaxPan)
            </div>
        </div>
           @* <div class="form-group">
            @Html.LabelFor(model => model.QtyUnits, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.QtyUnits,new {@placeholder="'Kgs' or 'Tons' etc"})
            @Html.ValidationMessageFor(model => model.QtyUnits)
        </div>
</div>*@


        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 text-center"><hr /><h4>Customer Details<span class="btn btn-default" onclick="picke()">Pick</span></h4></div>
        <div class="col-xs-6">
            <div class="form-group">
            @Html.LabelFor(model => model.customer.NameofCompany, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.NameofCompany,new {@placeholder="Name of Company"})
            @Html.ValidationMessageFor(model => model.customer.NameofCompany)
        </div>
        </div>
                        <div class="form-group">
            @Html.LabelFor(model => model.customer.Address, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.TextAreaFor(model => model.customer.Address,new {@placeholder="Address",@rows="3"})
            @Html.ValidationMessageFor(model => model.customer.Address)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactPerson, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactPerson,new {@placeholder="Contact Person Name"})
            @Html.ValidationMessageFor(model => model.customer.ContactPerson)
        </div>

            </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo,new {@placeholder="Contact No"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo)
        </div>
            </div>


            </div>

        <div class="col-xs-6">
            <div class="form-group">
            @Html.LabelFor(model => model.customer.InwardDcNo, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.HiddenFor(model => model.customer.CustomerID,new {@placeholder="Inward DC No",@value=Model.customer.CustomerID})
            @Html.EditorFor(model => model.customer.InwardDcNo,new {@placeholder="Inward DC No"})
            @Html.ValidationMessageFor(model => model.customer.InwardDcNo)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.Dated, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.Dated,new {@placeholder="Inward DC Dated",@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.customer.Dated)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.CustomerTin, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.CustomerTin,new {@placeholder="Customer Tin"})
            @Html.ValidationMessageFor(model => model.customer.Dated)
        </div>
        </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.CustomerWorkOrderNo, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.CustomerWorkOrderNo,new {@placeholder="Customer Tin"})
            @Html.ValidationMessageFor(model => model.customer.CustomerWorkOrderNo)
        </div>
        </div>
                        <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo2, new {@class="col-sm-3" })

        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo2,new {@placeholder="Contact No"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo2)
        </div>
            </div>
            <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo3, new {@class="col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.customer.ContactNo3,new {@placeholder="Contactno"})
            @Html.ValidationMessageFor(model => model.customer.ContactNo3)
        </div>
        </div>
        </div>
        <hr />

    </div>
    <div class="row" id="itemsHolder">
        <div class="col-xs-12 text-center"><hr /><h4>Items</h4></div>
        <div class="col-xs-1"></div>
            <div class="row"><div class="col-xs-1">Sno.</div>
            <div class="col-xs-3">Description</div>
            <div class="col-xs-2">Material</div>
            <div class="col-xs-1 QtyforItems">Qty</div>
                <div class="col-xs-1 QtyforItems">Scrap Return</div>

                <div class="col-xs-1"><span class="glyphicon glyphicon-plus" id="AddItemsRow">AddItems</span></div>
            </div>
        @{var i = 0;}
        @while (null != Model && Model.Items!=null && i < Model.Items.Count())
        {
        <div class="itemsRow row">
            <div class="col-xs-1"></div>
            <div class="col-xs-1">@(i+1)</div>@Html.HiddenFor(model => model.Items[i].DcId,new {@placeholder="Description"})
            @Html.HiddenFor(model => model.Items[i].DcItemsID,new {@placeholder="Description"})
            <div class="col-xs-3">@Html.EditorFor(model => model.Items[i].Desc,new {@placeholder="Description",@value=(Model.DeliveryChalanID)})</div>
            <div class="col-xs-2">@Html.EditorFor(model => model.Items[i].Material,new {@placeholder="Material"})</div>
            <div class="col-xs-1 QtyforItems">@Html.EditorFor(model => model.Items[i].Quantity,new {@placeholder="Material"})</div>
            <div class="col-xs-1 QtyforItems">@Html.EditorFor(model => model.Items[i].scrapreturn,new {@placeholder="Material"})</div>
            </div>
            i++;
        } 
            </div>
          @Html.HiddenFor(model => model.DeliveryChalanID)
            <input type="submit" value="Update" />
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div id="myModal" class="modal fade">
    <div class="modal-dialog  modal-lg " style="min-width:1200px;width:100%" onshow="$('.modal-body.king').height( $('iframe').contents().find('body').outerHeight()+30);">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Pick Customer</h4>
            </div>
            <div class="modal-body king" style="height:auto">
                <iframe src="/DBCustomer/" scrolling="vertical" width="100%" style="height:100%"  onload="$('.modal-body.king').height( $('iframe').contents().find('body').outerHeight()+30);"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function picke(e) {
        $('#myModal').modal('show');
        $('.modal-body').height($('iframe').contents().find('body').outerHeight() + 30);
    }

    $(document).ready(function () {

        $('#AddItemsRowss').click(function () {
            var myVariable = '<div class="itemsRow row">' +
            '<div class="col-xs-1"></div>' +
            '<div class="col-xs-1">' + ($('.itemsRow').length + 1) + '</div>' +
            '<div class="col-xs-3"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Desc" name="Items[' + $('.itemsRow').length + '].Desc" type="text" ></div>' +
            '<div class="col-xs-2"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Material" name="Items[' + $('.itemsRow').length + '].Material" type="text" ></div>' +
            '<div class="col-xs-1 QtyforItems"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__Quantity" name="Items[' + $('.itemsRow').length + '].Quantity" type="text" ></div>' +
            '<div class="col-xs-1"><input class="text-box single-line" id="Items_' + $('.itemsRow').length + '__scrapreturn" name="Items[' + $('.itemsRow').length + '].scrapreturn" type="text" ></div>' +
            '</div>';
            $('#itemsHolder').append(myVariable);
        });
        $('[type="datetime"]').datetimepicker({ pickTime: true, "autoclose": true });

    });

</script>
}

